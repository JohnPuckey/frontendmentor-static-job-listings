{"version":3,"sources":["components/Header.jsx","components/JobCards.jsx","components/Filters.jsx","App.js","index.js"],"names":["Header","className","JobCards","logo","company","position","postedAt","contract","location","isFeatured","isNew","handleFilters","jobTags","src","process","alt","map","tag","index","onClick","key","tagname","Filters","filters","clearAll","clearFilter","xmlns","width","height","fill","fillRule","d","App","useState","setFilters","indexOf","prevValue","length","filter","item","jobData","jobs","role","level","languages","tools","every","value","includes","filterJobs","id","featured","new","class","href","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3721acbb.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n    return <div className=\"header\"></div>;\n}\n\nexport default Header;","import React from 'react'\n\nconst JobCards = ({\n    logo,\n    company,\n    position,\n    postedAt,\n    contract,\n    location,\n    isFeatured,\n    isNew,\n    handleFilters,\n    jobTags\n}) => {\n\n\n    return (\n        <div className=\"job-card\">\n            <div className=\"logo\">\n                <img src={process.env.PUBLIC_URL + logo} alt={company}/>\n            </div>\n            <div className=\"card-details\">\n                <h2 className=\"company\">{company}</h2>\n\n                {/* check to see if job listing is featured or new */}\n                {isNew && <h2 className=\"new-tag\">New!</h2>}\n                {isFeatured && <h2 className=\"feature-tag\">Featured</h2>}\n                {isFeatured && <div className=\"feature-highlight\"></div>}\n\n\n                <h1 className=\"position\">{position}</h1>\n                <p className=\"description\">{postedAt} <span>&#8226;</span> {contract} <span>&#8226;</span> {location}</p>\n            </div>\n\n            <div className=\"card-tags\">\n                {jobTags.map((tag, index) => {\n                    return <button onClick={() => handleFilters(tag)} className=\"job-tag\" key={index} tagname={tag}> {tag} </button>\n                })}\n            </div>\n\n        </div>\n    )\n}\n\nexport default JobCards\n","import React from 'react'\n\nconst Filters = ({\n    filters,\n    clearAll,\n    clearFilter\n}) => {\n    return (\n        <div className=\"filters-container\">\n            <div className=\"filters\">\n                <div className=\"active-filters\">\n                    {filters.map((tag, index) => {\n                        return (\n                            <h3 key={index} className=\"filter-tag\">{tag}\n                                <button onClick={() => {clearFilter(tag)}} className=\"remove-btn\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\"><title>remove filter</title><path fill=\"#FFF\" fillRule=\"evenodd\" d=\"M11.314 0l2.121 2.121-4.596 4.596 4.596 4.597-2.121 2.121-4.597-4.596-4.596 4.596L0 11.314l4.596-4.597L0 2.121 2.121 0l4.596 4.596L11.314 0z\"/></svg>\n                                </button>\n                            </h3> \n                        )\n                       \n                    })}\n                </div>\n                <button onClick={() => {clearAll()}} className=\"clear-btn\">Clear</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Filters\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport JobCards from './components/JobCards'\nimport Filters from './components/Filters'\n\nimport jobData from './data/data.json';\n\nfunction App() {\n\n  const [filters, setFilters] = useState([])\n\n  // add filters to filter array\n  function handleFilters(tag) {\n    \n    // check to see if tag is already in filter array\n    if(filters.indexOf(tag) === -1 ) {\n\n      // add tag to filter array\n      setFilters(prevValue => [...prevValue, tag])\n    }\n  }\n\n  // clear filters array\n  function clearAll() {\n    setFilters([])\n  }\n\n  // Clear selected filter from array\n  function clearFilter(tag) {\n    setFilters(filters.filter(item => item !== tag))\n  }\n\n  return (\n    <div className=\"App\">\n\n      <Header />\n\n      {/* if filters array > 0, show filters component */}\n      {filters.length > 0 && <Filters \n        filters={filters}\n        clearAll={clearAll}\n        clearFilter={clearFilter}\n      />}\n\n\n        {/* map jobsData, if filter array > 0, return jobCards where jobTags contain filters */}\n      <div className=\"container\">\n      {jobData.map((jobs) => {\n\n        let jobTags = [jobs.role, jobs.level, ...(jobs.languages) || [], ...(jobs.tools) || []]\n\n        let filterJobs = (jobTags, filters) => \n          filters.every((value) => jobTags.includes(value));\n\n       \n        return filters.length === 0 ? (    \n\n          <JobCards\n            key={jobs.id}\n            logo={jobs.logo}\n            company={jobs.company}\n            position={jobs.position}\n            postedAt={jobs.postedAt}\n            contract={jobs.contract}\n            location={jobs.location}\n            isFeatured={jobs.featured}\n            isNew={jobs.new}\n            handleFilters={handleFilters}\n            jobTags={jobTags}\n          /> ) \n\n          : \n\n          ( filterJobs(jobTags, filters) && (\n\n          <JobCards\n            key={jobs.id}\n            logo={jobs.logo}\n            company={jobs.company}\n            position={jobs.position}\n            postedAt={jobs.postedAt}\n            contract={jobs.contract}\n            location={jobs.location}\n            isFeatured={jobs.featured}\n            isNew={jobs.new}\n            handleFilters={handleFilters}\n            jobTags={jobTags}\n          /> )\n\n       );\n      })}\n      </div>\n\n      <div class=\"attribution\">\n    Challenge by <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\">Frontend Mentor</a>. \n    Coded by <a href=\"https://www.frontendmentor.io/profile/ABCwarrior\">John Puckey</a>.\n  </div>\n  \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}